{
  "swagger": "2.0",
  "info": {
    "title": "carrier_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CarrierService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "googleprotobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\n[google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/googleprotobufAny"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        }
      },
      "description": "- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\n[google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "title": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:"
    },
    "userAdditionalService": {
      "type": "string",
      "enum": [
        "InsidePickup",
        "InsideDelivery",
        "PickupNotification",
        "DeliveryNotification",
        "LiftgatePickup",
        "LiftGateDelivery"
      ],
      "default": "InsidePickup"
    },
    "userAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"address_line_1,omitempty\""
        },
        "addressLine2": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"address_line_2,omitempty\""
        },
        "streetNumber": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"street_number_1,omitempty\""
        },
        "streetName": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"street_name,omitempty\""
        },
        "city": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"city,omitempty\""
        },
        "county": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"county,omitempty\""
        },
        "zipCode": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"zip_code,omitempty\""
        },
        "state": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"state,omitempty\""
        },
        "extendedZipCode": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"extended_zip_code,omitempty\""
        },
        "country": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"country,omitempty\""
        },
        "freeFormAddress": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"free_form_address,omitempty\""
        },
        "localName": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"local_name,omitempty\""
        },
        "id": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"id,omitempty\""
        },
        "type": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"type,omitempty\""
        },
        "pk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"pk,omitempty\""
        },
        "sk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"sk,omitempty\""
        }
      },
      "title": "type Address struct {\n\tStreetNumber                string `dynamodbav:\"street_number\" json:\"street_number\"`\n\tStreetName                  string `dynamodbav:\"street_name\" json:\"street_name\"`\n\tMunicipality                string `dynamodbav:\"municipality\" json:\"municipality\"`\n\tCountrySecondarySubdivision string `dynamodbav:\"country_secondary_subdivision\"  json:\"country_secondary_subdivision\"`\n\tCountrySubdivision          string `dynamodbav:\"country_subdivision\" json:\"country_subdivision\"`\n\tCountrySubdivisionName      string `dynamodbav:\"country_subdivision_name\" json:\"country_subdivision_name\"`\n\tPostalCode                  string `dynamodbav:\"postal_code\" json:\"postal_code\"`\n\tState                       string `dynamodbav:\"state\" json:\"state\"`\n\tExtendedPostalCode          string `dynamodbav:\"extended_postal_code\" json:\"extended_postal_code\"`\n\tCountryCode                 string `dynamodbav:\"country_code\" json:\"country_code\"`\n\tCountry                     string `dynamodbav:\"country\" json:\"country\"`\n\tCountryCodeISO3             string `dynamodbav:\"country_codeISO3\" json:\"country_codeISO3\"`\n\tFreeformAddress             string `dynamodbav:\"freeform_address\" json:\"freeform_address\"`\n\tLocalName                   string `dynamodbav:\"local_name\" json:\"local_name\"`\n\tID                          string `dynamodbav:\"id\" json:\"id\"`\n\tType                        string `dynamodbav:\"type\" json:\"type\"`\n\tAddressLine2                string `dynamodbav:\"address_line2\" json:\"address_line2\"`\n\tAddressLine1                string `dynamodbav:\"address_line1\" json:\"address_line1\"`\n}"
    },
    "userAmount": {
      "type": "object",
      "properties": {
        "fullAmount": {
          "type": "number",
          "format": "double",
          "title": "@gotags: dynamodbav:\"full_amount,omitempty\""
        },
        "discountApplied": {
          "type": "number",
          "format": "double",
          "title": "@gotags: dynamodbav:\"discount_applied,omitempty\""
        },
        "netAmount": {
          "type": "number",
          "format": "double",
          "title": "@gotags: dynamodbav:\"net_amount,omitempty\""
        }
      }
    },
    "userAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.\n\n@gotags: dynamodbav:\"type_url,omitempty\""
        },
        "value": {
          "type": "string",
          "format": "byte",
          "title": "Must be a valid serialized protocol buffer of the above specified type.\n@gotags: dynamodbav:\"value,omitempty\""
        }
      }
    },
    "userBookingResponse": {
      "type": "object",
      "properties": {
        "bookingId": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"booking_id,omitempty\""
        },
        "bolUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"bol_url,omitempty\""
        },
        "invoiceUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"invoice_url,omitempty\""
        },
        "invoiceDueDate": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"invoice_due_date,omitempty\""
        },
        "pickUpStart": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"pick_up_start,omitempty\""
        },
        "pickUpEnd": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"pick_up_end,omitempty\""
        },
        "bookedQuote": {
          "$ref": "#/definitions/userQuoteRequest",
          "title": "@gotags: dynamodbav:\"booked_quote,omitempty\""
        }
      }
    },
    "userBusinessData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"type,omitempty\""
        },
        "businessName": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"business_name,omitempty\""
        },
        "businessId": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"business_id,omitempty\""
        },
        "businessEmail": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"business_email,omitempty\""
        },
        "accountingEmail": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"accounting_email,omitempty\""
        },
        "customerServiceEmail": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"customer_service_email,omitempty\""
        },
        "highPriorityEmail": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"high_priority_email,omitempty\""
        },
        "avatarUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"avatar_url,omitempty\""
        },
        "adminEmail": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"admin_email,omitempty\""
        },
        "createdOn": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"created_on,omitempty\""
        },
        "updatedOn": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"updated_on,omitempty\""
        },
        "deletedOn": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"deleted_on,omitempty\""
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userPhoneNumberData"
          },
          "title": "@gotags: dynamodbav:\"phone_numbers,omitempty\""
        },
        "sk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"sk,omitempty\""
        },
        "pk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"pk,omitempty\""
        }
      }
    },
    "userBusinessHour": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"start,omitempty\""
        },
        "end": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"end,omitempty\""
        }
      }
    },
    "userCarrier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"name,omitempty\""
        },
        "authUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"auth_url,omitempty\""
        },
        "rateUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"rate_url,omitempty\""
        },
        "addAddressUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"add_address_url,omitempty\""
        },
        "getAddressUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"get_address_url,omitempty\""
        },
        "quoteHistoryUrl": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"quote_history_url,omitempty\""
        }
      },
      "title": "type BaseCarrier struct {\n\tName            string `json:\"name,omitempty\"`\n\tAuthUrl         string `json:\"auth_url,omitempty\"`\n\tRateUrl         string `json:\"rate_url,omitempty\"`\n\tAddAddressUrl   string `json:\"add_address_url,omitempty\"`\n\tGetAddressesUrl string `json:\"get_addresses_url,omitempty\"`\n\tQuoteHistoryUrl string `json:\"quote_history_url,omitempty\"`\n}"
    },
    "userCarrierServicePing": {
      "type": "object",
      "properties": {
        "hi": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"hi,omitempty\""
        }
      }
    },
    "userCommodity": {
      "type": "object",
      "properties": {
        "density": {
          "type": "number",
          "format": "float",
          "title": "@gotags: dynamodbav:\"density,omitempty\""
        },
        "length": {
          "type": "number",
          "format": "float",
          "title": "@gotags: dynamodbav:\"length,omitempty\""
        },
        "width": {
          "type": "number",
          "format": "float",
          "title": "@gotags: dynamodbav:\"width,omitempty\""
        },
        "height": {
          "type": "number",
          "format": "float",
          "title": "@gotags: dynamodbav:\"height,omitempty\""
        },
        "weight": {
          "type": "number",
          "format": "float",
          "title": "@gotags: dynamodbav:\"weight,omitempty\""
        },
        "dimensionUOM": {
          "$ref": "#/definitions/userDimensionUOM",
          "title": "@gotags: dynamodbav:\"dimension_uom,omitempty\""
        },
        "weightUOM": {
          "$ref": "#/definitions/userWeightUOM",
          "title": "@gotags: dynamodbav:\"weight_uom,omitempty\""
        },
        "dimensionDisplay": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"dimension_display,omitempty\""
        },
        "packageType": {
          "$ref": "#/definitions/userPackageType",
          "title": "@gotags: dynamodbav:\"package_type,omitempty\""
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: dynamodbav:\"quantity,omitempty\""
        },
        "freightClass": {
          "$ref": "#/definitions/userFreightClass",
          "title": "@gotags: dynamodbav:\"freight_class,omitempty\""
        }
      }
    },
    "userContact": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"first_name,omitempty\""
        },
        "lastName": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"last_name,omitempty\""
        },
        "phoneNumber": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"phone_number,omitempty\""
        },
        "phoneNumberExtension": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"phone_number_extension,omitempty\""
        },
        "emailAddress": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"email_address,omitempty\""
        },
        "phoneNumberDisplay": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"phone_number_display,omitempty\""
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userRole"
          },
          "title": "@gotags: dynamodbav:\"roles,omitempty\""
        },
        "prefferedContactMethod": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"preffered_contact_method,omitempty\""
        }
      }
    },
    "userDelivery": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/userLocation",
          "title": "@gotags: dynamodbav:\"location,omitempty\""
        },
        "locationType": {
          "$ref": "#/definitions/userLocationType",
          "title": "@gotags: dynamodbav:\"location_type,omitempty\""
        },
        "additionalSevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userAdditionalService"
          },
          "title": "@gotags: dynamodbav:\"additional_sevices,omitempty\""
        },
        "date": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"date,omitempty\""
        }
      }
    },
    "userDimensionUOM": {
      "type": "string",
      "enum": [
        "INCH",
        "CM"
      ],
      "default": "INCH"
    },
    "userDynamoBusiness": {
      "type": "object",
      "properties": {
        "pk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"pk,omitempty\""
        },
        "sk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"sk,omitempty\""
        },
        "businessPk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"business_pk,omitempty\""
        },
        "businessSk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"business_sk,omitempty\""
        },
        "businessEntity": {
          "$ref": "#/definitions/userBusinessData",
          "title": "@gotags: dynamodbav:\"business_entity,omitempty\""
        }
      }
    },
    "userFreightClass": {
      "type": "string",
      "enum": [
        "Class50",
        "Class55",
        "Class60",
        "Class65",
        "Class70",
        "Class775",
        "Class85",
        "Class925",
        "Class100",
        "Class110",
        "Class125",
        "Class150",
        "Class175",
        "Class200",
        "Class250",
        "Class300",
        "Class400",
        "Class500"
      ],
      "default": "Class50"
    },
    "userListOfBooking": {
      "type": "object",
      "properties": {
        "bookingHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userBookingResponse"
          },
          "title": "@gotags: dynamodbav:\"booking_response,omitempty\""
        }
      }
    },
    "userListOfQuoteResponse": {
      "type": "object",
      "properties": {
        "quote": {
          "$ref": "#/definitions/userQuoteRequest",
          "title": "@gotags: dynamodbav:\"quote,omitempty\""
        },
        "quotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userQuoteResponse"
          },
          "title": "@gotags: dynamodbav:\"quotes,omitempty\""
        }
      }
    },
    "userListsOfLocation": {
      "type": "object",
      "properties": {
        "ListsOfLocation": {
          "$ref": "#/definitions/userLocation",
          "title": "@gotags: dynamodbav:lists_of_locations,omitempty\""
        }
      }
    },
    "userLocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"id,omitempty\""
        },
        "name": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"name,omitempty\""
        },
        "address": {
          "$ref": "#/definitions/userAddress",
          "title": "@gotags: dynamodbav:\"address,omitempty\""
        },
        "contact": {
          "$ref": "#/definitions/userContact",
          "title": "@gotags: dynamodbav:\"contact,omitempty\""
        },
        "locationType": {
          "$ref": "#/definitions/userLocationType",
          "title": "@gotags: dynamodbav:\"location_type,omitempty\""
        },
        "additionalService": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userAdditionalService"
          },
          "title": "@gotags: dynamodbav:\"additional_service,omitempty\""
        },
        "businessHours": {
          "$ref": "#/definitions/userBusinessHour",
          "title": "@gotags: dynamodbav:\"business_hours,omitempty\","
        },
        "isDefaultPickUp": {
          "type": "boolean",
          "title": "@gotags: dynamodbav:\"is_default_pick_up,omitempty\""
        },
        "isDefaultDelivery": {
          "type": "boolean",
          "title": "@gotags: dynamodbav:\"is_default_delivery,omitempty\""
        }
      }
    },
    "userLocationType": {
      "type": "string",
      "enum": [
        "BusinessWithDock",
        "BusinessWithOutDock",
        "ResidentialLocation",
        "LimitedAccessLocation",
        "GovermentBuilding",
        "Apt",
        "Suite",
        "Floor",
        "CommercialStore",
        "Warehouse"
      ],
      "default": "BusinessWithDock"
    },
    "userOk": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "@gotags: dynamodbav:\"success,omitempty\""
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: dynamodbav:\"status_code,omitempty\""
        },
        "message": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"message,omitempty\""
        }
      }
    },
    "userOkWithData": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "title": "@gotags: dynamodbav:\"success,omitempty\""
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "title": "@gotags: dynamodbav:\"status_code,omitempty\""
        },
        "message": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"message,omitempty\""
        },
        "data": {
          "$ref": "#/definitions/userAny",
          "title": "@gotags: dynamodbav:\"data,omitempty\""
        }
      }
    },
    "userPackageType": {
      "type": "string",
      "enum": [
        "Pallet",
        "Box",
        "Bundles",
        "Crate",
        "Loose",
        "Pieces",
        "Roll"
      ],
      "default": "Pallet"
    },
    "userPhoneNumberData": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"phone_number,omitempty\""
        },
        "type": {
          "$ref": "#/definitions/userPhoneNumberType",
          "title": "@gotags: dynamodbav:\"phone_number_type,omitempty\""
        }
      }
    },
    "userPhoneNumberType": {
      "type": "string",
      "enum": [
        "Home",
        "Office",
        "CellPhone"
      ],
      "default": "Home"
    },
    "userPickup": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/userLocation",
          "title": "@gotags: dynamodbav:\"location,omitempty\""
        },
        "locationType": {
          "$ref": "#/definitions/userLocationType",
          "title": "@gotags: dynamodbav:\"location_type,omitempty\""
        },
        "additionalSevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userAdditionalService"
          },
          "title": "@gotags: dynamodbav:\"additional_Sevices,omitempty\""
        },
        "date": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"date,omitempty\""
        }
      }
    },
    "userQuoteRequest": {
      "type": "object",
      "properties": {
        "quoteId": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"quote_id,omitempty\""
        },
        "userEmail": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"user_email,omitempty\""
        },
        "buisnessId": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"business_id,omitempty\""
        },
        "mode": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"mode,omitempty\""
        },
        "liablePartyId": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"liable_party_id,omitempty\""
        },
        "shippingDetail": {
          "$ref": "#/definitions/userShippingDetail",
          "title": "@gotags: dynamodbav:\"shipping_detail,omitempty\""
        },
        "additionalServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userAdditionalService"
          },
          "title": "@gotags: dynamodbav:\"additional_services,omitempty\""
        },
        "commodities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userCommodity"
          },
          "title": "@gotags: dynamodbav:\"commodities,omitempty\""
        }
      }
    },
    "userQuoteResponse": {
      "type": "object",
      "properties": {
        "quoteId": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"quote_id,omitempty\""
        },
        "sk": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"sort_id,omitempty\""
        },
        "carrier": {
          "$ref": "#/definitions/userCarrier",
          "title": "@gotags: dynamodbav:\"carrier,omitempty\""
        },
        "amount": {
          "$ref": "#/definitions/userAmount",
          "title": "@gotags: dynamodbav:\"amount,omitempty\""
        },
        "transitTime": {
          "type": "string",
          "title": "@gotags: dynamodbav:\"transit_time,omitempty\""
        },
        "guranteed": {
          "type": "boolean",
          "title": "@gotags: dynamodbav:\"guranteed,omitempty\""
        }
      }
    },
    "userRole": {
      "type": "string",
      "enum": [
        "SystemOwner",
        "SystemManager",
        "SystemStaff",
        "SystemDeveloper",
        "SystemWarehouseManager",
        "SystemWarehouseStaff",
        "BusinessOwner",
        "BusinessManager",
        "BusinessStaff",
        "BusinessWarehouseManager",
        "BusinessWarehouseStaff",
        "ThreePLOwner",
        "ThreePLStaff"
      ],
      "default": "SystemOwner"
    },
    "userShippingDetail": {
      "type": "object",
      "properties": {
        "pickUp": {
          "$ref": "#/definitions/userPickup",
          "title": "@gotags: dynamodbav:\"pick_up,omitempty\""
        },
        "delivery": {
          "$ref": "#/definitions/userDelivery",
          "title": "@gotags: dynamodbav:\"delivery,omitempty\""
        }
      }
    },
    "userWeightUOM": {
      "type": "string",
      "enum": [
        "LB",
        "KG"
      ],
      "default": "LB"
    }
  }
}
