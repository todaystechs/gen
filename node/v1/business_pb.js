// source: business.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var phone_number_pb = require('./phone_number_pb.js');
goog.object.extend(proto, phone_number_pb);
goog.exportSymbol('proto.user.AllBusinessRequest', null, global);
goog.exportSymbol('proto.user.BusinessData', null, global);
goog.exportSymbol('proto.user.BusinessDataRequest', null, global);
goog.exportSymbol('proto.user.BusinessRequest', null, global);
goog.exportSymbol('proto.user.DynamoBusiness', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.BusinessData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.BusinessData.repeatedFields_, null);
};
goog.inherits(proto.user.BusinessData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.BusinessData.displayName = 'proto.user.BusinessData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.BusinessDataRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.BusinessDataRequest.repeatedFields_, null);
};
goog.inherits(proto.user.BusinessDataRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.BusinessDataRequest.displayName = 'proto.user.BusinessDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.DynamoBusiness = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.DynamoBusiness, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.DynamoBusiness.displayName = 'proto.user.DynamoBusiness';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.BusinessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.BusinessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.BusinessRequest.displayName = 'proto.user.BusinessRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.AllBusinessRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.AllBusinessRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.AllBusinessRequest.displayName = 'proto.user.AllBusinessRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.BusinessData.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.BusinessData.prototype.toObject = function(opt_includeInstance) {
  return proto.user.BusinessData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.BusinessData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.BusinessData.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    businessId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessEmail: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accountingEmail: jspb.Message.getFieldWithDefault(msg, 5, ""),
    customerServiceEmail: jspb.Message.getFieldWithDefault(msg, 6, ""),
    highPriorityEmail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    adminEmail: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdOn: jspb.Message.getFieldWithDefault(msg, 10, ""),
    updatedOn: jspb.Message.getFieldWithDefault(msg, 11, ""),
    deletedOn: jspb.Message.getFieldWithDefault(msg, 12, ""),
    phoneNumbersList: jspb.Message.toObjectList(msg.getPhoneNumbersList(),
    phone_number_pb.PhoneNumberData.toObject, includeInstance),
    sk: jspb.Message.getFieldWithDefault(msg, 14, ""),
    pk: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.BusinessData}
 */
proto.user.BusinessData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.BusinessData;
  return proto.user.BusinessData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.BusinessData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.BusinessData}
 */
proto.user.BusinessData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountingEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerServiceEmail(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHighPriorityEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdminEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedOn(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedOn(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeletedOn(value);
      break;
    case 13:
      var value = new phone_number_pb.PhoneNumberData;
      reader.readMessage(value,phone_number_pb.PhoneNumberData.deserializeBinaryFromReader);
      msg.addPhoneNumbers(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setSk(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.BusinessData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.BusinessData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.BusinessData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.BusinessData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBusinessId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccountingEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCustomerServiceEmail();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getHighPriorityEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAdminEmail();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedOn();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getUpdatedOn();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDeletedOn();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPhoneNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      phone_number_pb.PhoneNumberData.serializeBinaryToWriter
    );
  }
  f = message.getSk();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPk();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.user.BusinessData.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string business_name = 2;
 * @return {string}
 */
proto.user.BusinessData.prototype.getBusinessName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setBusinessName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string business_id = 3;
 * @return {string}
 */
proto.user.BusinessData.prototype.getBusinessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setBusinessId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string business_email = 4;
 * @return {string}
 */
proto.user.BusinessData.prototype.getBusinessEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setBusinessEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string accounting_email = 5;
 * @return {string}
 */
proto.user.BusinessData.prototype.getAccountingEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setAccountingEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string customer_service_email = 6;
 * @return {string}
 */
proto.user.BusinessData.prototype.getCustomerServiceEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setCustomerServiceEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string high_priority_email = 7;
 * @return {string}
 */
proto.user.BusinessData.prototype.getHighPriorityEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setHighPriorityEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string avatar_url = 8;
 * @return {string}
 */
proto.user.BusinessData.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string admin_email = 9;
 * @return {string}
 */
proto.user.BusinessData.prototype.getAdminEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setAdminEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string created_on = 10;
 * @return {string}
 */
proto.user.BusinessData.prototype.getCreatedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setCreatedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string updated_on = 11;
 * @return {string}
 */
proto.user.BusinessData.prototype.getUpdatedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setUpdatedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string deleted_on = 12;
 * @return {string}
 */
proto.user.BusinessData.prototype.getDeletedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setDeletedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated PhoneNumberData phone_numbers = 13;
 * @return {!Array<!proto.user.PhoneNumberData>}
 */
proto.user.BusinessData.prototype.getPhoneNumbersList = function() {
  return /** @type{!Array<!proto.user.PhoneNumberData>} */ (
    jspb.Message.getRepeatedWrapperField(this, phone_number_pb.PhoneNumberData, 13));
};


/**
 * @param {!Array<!proto.user.PhoneNumberData>} value
 * @return {!proto.user.BusinessData} returns this
*/
proto.user.BusinessData.prototype.setPhoneNumbersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.user.PhoneNumberData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.user.PhoneNumberData}
 */
proto.user.BusinessData.prototype.addPhoneNumbers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.user.PhoneNumberData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.clearPhoneNumbersList = function() {
  return this.setPhoneNumbersList([]);
};


/**
 * optional string sk = 14;
 * @return {string}
 */
proto.user.BusinessData.prototype.getSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setSk = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string pk = 15;
 * @return {string}
 */
proto.user.BusinessData.prototype.getPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessData} returns this
 */
proto.user.BusinessData.prototype.setPk = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.BusinessDataRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.BusinessDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.user.BusinessDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.BusinessDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.BusinessDataRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokenList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.BusinessDataRequest}
 */
proto.user.BusinessDataRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.BusinessDataRequest;
  return proto.user.BusinessDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.BusinessDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.BusinessDataRequest}
 */
proto.user.BusinessDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.BusinessDataRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.BusinessDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.BusinessDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.BusinessDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string token = 1;
 * @return {!Array<string>}
 */
proto.user.BusinessDataRequest.prototype.getTokenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.user.BusinessDataRequest} returns this
 */
proto.user.BusinessDataRequest.prototype.setTokenList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.user.BusinessDataRequest} returns this
 */
proto.user.BusinessDataRequest.prototype.addToken = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.BusinessDataRequest} returns this
 */
proto.user.BusinessDataRequest.prototype.clearTokenList = function() {
  return this.setTokenList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.DynamoBusiness.prototype.toObject = function(opt_includeInstance) {
  return proto.user.DynamoBusiness.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.DynamoBusiness} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.DynamoBusiness.toObject = function(includeInstance, msg) {
  var f, obj = {
    pk: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sk: jspb.Message.getFieldWithDefault(msg, 2, ""),
    businessPk: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businessSk: jspb.Message.getFieldWithDefault(msg, 4, ""),
    businessEntity: (f = msg.getBusinessEntity()) && proto.user.BusinessData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.DynamoBusiness}
 */
proto.user.DynamoBusiness.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.DynamoBusiness;
  return proto.user.DynamoBusiness.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.DynamoBusiness} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.DynamoBusiness}
 */
proto.user.DynamoBusiness.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPk(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSk(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessPk(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessSk(value);
      break;
    case 5:
      var value = new proto.user.BusinessData;
      reader.readMessage(value,proto.user.BusinessData.deserializeBinaryFromReader);
      msg.setBusinessEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.DynamoBusiness.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.DynamoBusiness.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.DynamoBusiness} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.DynamoBusiness.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPk();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSk();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBusinessPk();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinessSk();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBusinessEntity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.user.BusinessData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pk = 1;
 * @return {string}
 */
proto.user.DynamoBusiness.prototype.getPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoBusiness} returns this
 */
proto.user.DynamoBusiness.prototype.setPk = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sk = 2;
 * @return {string}
 */
proto.user.DynamoBusiness.prototype.getSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoBusiness} returns this
 */
proto.user.DynamoBusiness.prototype.setSk = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string business_pk = 3;
 * @return {string}
 */
proto.user.DynamoBusiness.prototype.getBusinessPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoBusiness} returns this
 */
proto.user.DynamoBusiness.prototype.setBusinessPk = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string business_sk = 4;
 * @return {string}
 */
proto.user.DynamoBusiness.prototype.getBusinessSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoBusiness} returns this
 */
proto.user.DynamoBusiness.prototype.setBusinessSk = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional BusinessData business_entity = 5;
 * @return {?proto.user.BusinessData}
 */
proto.user.DynamoBusiness.prototype.getBusinessEntity = function() {
  return /** @type{?proto.user.BusinessData} */ (
    jspb.Message.getWrapperField(this, proto.user.BusinessData, 5));
};


/**
 * @param {?proto.user.BusinessData|undefined} value
 * @return {!proto.user.DynamoBusiness} returns this
*/
proto.user.DynamoBusiness.prototype.setBusinessEntity = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.user.DynamoBusiness} returns this
 */
proto.user.DynamoBusiness.prototype.clearBusinessEntity = function() {
  return this.setBusinessEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.DynamoBusiness.prototype.hasBusinessEntity = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.BusinessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.user.BusinessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.BusinessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.BusinessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.BusinessRequest}
 */
proto.user.BusinessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.BusinessRequest;
  return proto.user.BusinessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.BusinessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.BusinessRequest}
 */
proto.user.BusinessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.BusinessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.BusinessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.BusinessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.BusinessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string business_id = 1;
 * @return {string}
 */
proto.user.BusinessRequest.prototype.getBusinessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessRequest} returns this
 */
proto.user.BusinessRequest.prototype.setBusinessId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.user.BusinessRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.BusinessRequest} returns this
 */
proto.user.BusinessRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.AllBusinessRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.user.AllBusinessRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.AllBusinessRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.AllBusinessRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.AllBusinessRequest}
 */
proto.user.AllBusinessRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.AllBusinessRequest;
  return proto.user.AllBusinessRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.AllBusinessRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.AllBusinessRequest}
 */
proto.user.AllBusinessRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.AllBusinessRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.AllBusinessRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.AllBusinessRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.AllBusinessRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.user.AllBusinessRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.AllBusinessRequest} returns this
 */
proto.user.AllBusinessRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.user);
