// source: user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var role_pb = require('./role_pb.js');
goog.object.extend(proto, role_pb);
var phone_number_pb = require('./phone_number_pb.js');
goog.object.extend(proto, phone_number_pb);
var password_pb = require('./password_pb.js');
goog.object.extend(proto, password_pb);
goog.exportSymbol('proto.user.DynamoUserEntity', null, global);
goog.exportSymbol('proto.user.MeData', null, global);
goog.exportSymbol('proto.user.UserData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.UserData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.UserData.repeatedFields_, null);
};
goog.inherits(proto.user.UserData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.UserData.displayName = 'proto.user.UserData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.MeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.MeData.repeatedFields_, null);
};
goog.inherits(proto.user.MeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.MeData.displayName = 'proto.user.MeData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.DynamoUserEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.DynamoUserEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.DynamoUserEntity.displayName = 'proto.user.DynamoUserEntity';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.UserData.repeatedFields_ = [11,17,19,20,23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.UserData.prototype.toObject = function(opt_includeInstance) {
  return proto.user.UserData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.UserData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.UserData.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cognitoId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    middleName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    hashedPassword: jspb.Message.getFieldWithDefault(msg, 9, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    rolesList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    newPasswordRequired: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    passwordChangedAt: jspb.Message.getFieldWithDefault(msg, 13, ""),
    createdOn: jspb.Message.getFieldWithDefault(msg, 14, ""),
    updatedOn: jspb.Message.getFieldWithDefault(msg, 15, ""),
    deletedOn: jspb.Message.getFieldWithDefault(msg, 16, ""),
    phoneNumbersList: jspb.Message.toObjectList(msg.getPhoneNumbersList(),
    phone_number_pb.PhoneNumberData.toObject, includeInstance),
    emailVerified: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    resetPasswordTokensList: (f = jspb.Message.getRepeatedField(msg, 19)) == null ? undefined : f,
    resetPasswordTokenMap: (f = msg.getResetPasswordTokenMap()) ? f.toObject(includeInstance, undefined) : [],
    sessionsList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
    pk: jspb.Message.getFieldWithDefault(msg, 21, ""),
    sk: jspb.Message.getFieldWithDefault(msg, 22, ""),
    businessIdsList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f,
    unsuscribedToMarketingEmail: jspb.Message.getBooleanFieldWithDefault(msg, 24, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.UserData}
 */
proto.user.UserData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.UserData;
  return proto.user.UserData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.UserData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.UserData}
 */
proto.user.UserData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCognitoId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiddleName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHashedPassword(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 11:
      var values = /** @type {!Array<!proto.user.Role>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addRoles(values[i]);
      }
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNewPasswordRequired(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasswordChangedAt(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedOn(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedOn(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeletedOn(value);
      break;
    case 17:
      var value = new phone_number_pb.PhoneNumberData;
      reader.readMessage(value,phone_number_pb.PhoneNumberData.deserializeBinaryFromReader);
      msg.addPhoneNumbers(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailVerified(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.addResetPasswordTokens(value);
      break;
    case 25:
      var value = msg.getResetPasswordTokenMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readDouble, null, "", 0.0);
         });
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addSessions(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setPk(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSk(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.addBusinessIds(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnsuscribedToMarketingEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.UserData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.UserData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.UserData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.UserData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCognitoId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMiddleName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHashedPassword();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      11,
      f
    );
  }
  f = message.getNewPasswordRequired();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getPasswordChangedAt();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCreatedOn();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getUpdatedOn();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getDeletedOn();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPhoneNumbersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      phone_number_pb.PhoneNumberData.serializeBinaryToWriter
    );
  }
  f = message.getEmailVerified();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getResetPasswordTokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      19,
      f
    );
  }
  f = message.getResetPasswordTokenMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(25, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeDouble);
  }
  f = message.getSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
  f = message.getPk();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getSk();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getBusinessIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      23,
      f
    );
  }
  f = message.getUnsuscribedToMarketingEmail();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
};


/**
 * optional string Type = 1;
 * @return {string}
 */
proto.user.UserData.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cognito_id = 2;
 * @return {string}
 */
proto.user.UserData.prototype.getCognitoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setCognitoId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_name = 3;
 * @return {string}
 */
proto.user.UserData.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.user.UserData.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string first_name = 5;
 * @return {string}
 */
proto.user.UserData.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string middle_name = 6;
 * @return {string}
 */
proto.user.UserData.prototype.getMiddleName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setMiddleName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string last_name = 7;
 * @return {string}
 */
proto.user.UserData.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.user.UserData.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string hashed_password = 9;
 * @return {string}
 */
proto.user.UserData.prototype.getHashedPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setHashedPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string avatar_url = 10;
 * @return {string}
 */
proto.user.UserData.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated Role roles = 11;
 * @return {!Array<!proto.user.Role>}
 */
proto.user.UserData.prototype.getRolesList = function() {
  return /** @type {!Array<!proto.user.Role>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<!proto.user.Role>} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setRolesList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!proto.user.Role} value
 * @param {number=} opt_index
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.addRoles = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.clearRolesList = function() {
  return this.setRolesList([]);
};


/**
 * optional bool new_password_required = 12;
 * @return {boolean}
 */
proto.user.UserData.prototype.getNewPasswordRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setNewPasswordRequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string password_changed_at = 13;
 * @return {string}
 */
proto.user.UserData.prototype.getPasswordChangedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setPasswordChangedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string created_on = 14;
 * @return {string}
 */
proto.user.UserData.prototype.getCreatedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setCreatedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string updated_on = 15;
 * @return {string}
 */
proto.user.UserData.prototype.getUpdatedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setUpdatedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string deleted_on = 16;
 * @return {string}
 */
proto.user.UserData.prototype.getDeletedOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setDeletedOn = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * repeated PhoneNumberData phone_numbers = 17;
 * @return {!Array<!proto.user.PhoneNumberData>}
 */
proto.user.UserData.prototype.getPhoneNumbersList = function() {
  return /** @type{!Array<!proto.user.PhoneNumberData>} */ (
    jspb.Message.getRepeatedWrapperField(this, phone_number_pb.PhoneNumberData, 17));
};


/**
 * @param {!Array<!proto.user.PhoneNumberData>} value
 * @return {!proto.user.UserData} returns this
*/
proto.user.UserData.prototype.setPhoneNumbersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.user.PhoneNumberData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.user.PhoneNumberData}
 */
proto.user.UserData.prototype.addPhoneNumbers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.user.PhoneNumberData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.clearPhoneNumbersList = function() {
  return this.setPhoneNumbersList([]);
};


/**
 * optional bool email_verified = 18;
 * @return {boolean}
 */
proto.user.UserData.prototype.getEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setEmailVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * repeated string reset_password_tokens = 19;
 * @return {!Array<string>}
 */
proto.user.UserData.prototype.getResetPasswordTokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 19));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setResetPasswordTokensList = function(value) {
  return jspb.Message.setField(this, 19, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.addResetPasswordTokens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 19, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.clearResetPasswordTokensList = function() {
  return this.setResetPasswordTokensList([]);
};


/**
 * map<string, double> reset_password_token = 25;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.user.UserData.prototype.getResetPasswordTokenMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 25, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.clearResetPasswordTokenMap = function() {
  this.getResetPasswordTokenMap().clear();
  return this;};


/**
 * repeated string sessions = 20;
 * @return {!Array<string>}
 */
proto.user.UserData.prototype.getSessionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setSessionsList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.addSessions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.clearSessionsList = function() {
  return this.setSessionsList([]);
};


/**
 * optional string pk = 21;
 * @return {string}
 */
proto.user.UserData.prototype.getPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setPk = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string sk = 22;
 * @return {string}
 */
proto.user.UserData.prototype.getSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setSk = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * repeated string Business_ids = 23;
 * @return {!Array<string>}
 */
proto.user.UserData.prototype.getBusinessIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 23));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setBusinessIdsList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.addBusinessIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.clearBusinessIdsList = function() {
  return this.setBusinessIdsList([]);
};


/**
 * optional bool unsuscribed_to_marketing_email = 24;
 * @return {boolean}
 */
proto.user.UserData.prototype.getUnsuscribedToMarketingEmail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 24, false));
};


/**
 * @param {boolean} value
 * @return {!proto.user.UserData} returns this
 */
proto.user.UserData.prototype.setUnsuscribedToMarketingEmail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 24, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.MeData.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.MeData.prototype.toObject = function(opt_includeInstance) {
  return proto.user.MeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.MeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.MeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokenList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.MeData}
 */
proto.user.MeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.MeData;
  return proto.user.MeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.MeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.MeData}
 */
proto.user.MeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.MeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.MeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.MeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.MeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string token = 1;
 * @return {!Array<string>}
 */
proto.user.MeData.prototype.getTokenList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.user.MeData} returns this
 */
proto.user.MeData.prototype.setTokenList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.user.MeData} returns this
 */
proto.user.MeData.prototype.addToken = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.MeData} returns this
 */
proto.user.MeData.prototype.clearTokenList = function() {
  return this.setTokenList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.DynamoUserEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.user.DynamoUserEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.DynamoUserEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.DynamoUserEntity.toObject = function(includeInstance, msg) {
  var f, obj = {
    pk: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sk: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userPk: jspb.Message.getFieldWithDefault(msg, 3, ""),
    userSk: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userEntity: (f = msg.getUserEntity()) && proto.user.UserData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.DynamoUserEntity}
 */
proto.user.DynamoUserEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.DynamoUserEntity;
  return proto.user.DynamoUserEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.DynamoUserEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.DynamoUserEntity}
 */
proto.user.DynamoUserEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPk(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSk(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPk(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserSk(value);
      break;
    case 5:
      var value = new proto.user.UserData;
      reader.readMessage(value,proto.user.UserData.deserializeBinaryFromReader);
      msg.setUserEntity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.DynamoUserEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.DynamoUserEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.DynamoUserEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.DynamoUserEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPk();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSk();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserPk();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUserSk();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserEntity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.user.UserData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pk = 1;
 * @return {string}
 */
proto.user.DynamoUserEntity.prototype.getPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoUserEntity} returns this
 */
proto.user.DynamoUserEntity.prototype.setPk = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sk = 2;
 * @return {string}
 */
proto.user.DynamoUserEntity.prototype.getSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoUserEntity} returns this
 */
proto.user.DynamoUserEntity.prototype.setSk = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_pk = 3;
 * @return {string}
 */
proto.user.DynamoUserEntity.prototype.getUserPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoUserEntity} returns this
 */
proto.user.DynamoUserEntity.prototype.setUserPk = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string user_sk = 4;
 * @return {string}
 */
proto.user.DynamoUserEntity.prototype.getUserSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.DynamoUserEntity} returns this
 */
proto.user.DynamoUserEntity.prototype.setUserSk = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional UserData user_entity = 5;
 * @return {?proto.user.UserData}
 */
proto.user.DynamoUserEntity.prototype.getUserEntity = function() {
  return /** @type{?proto.user.UserData} */ (
    jspb.Message.getWrapperField(this, proto.user.UserData, 5));
};


/**
 * @param {?proto.user.UserData|undefined} value
 * @return {!proto.user.DynamoUserEntity} returns this
*/
proto.user.DynamoUserEntity.prototype.setUserEntity = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.user.DynamoUserEntity} returns this
 */
proto.user.DynamoUserEntity.prototype.clearUserEntity = function() {
  return this.setUserEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.DynamoUserEntity.prototype.hasUserEntity = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.user);
