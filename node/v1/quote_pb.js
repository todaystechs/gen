// source: quote.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var shipping_detail_pb = require('./shipping_detail_pb.js');
goog.object.extend(proto, shipping_detail_pb);
var additional_service_pb = require('./additional_service_pb.js');
goog.object.extend(proto, additional_service_pb);
var commodity_pb = require('./commodity_pb.js');
goog.object.extend(proto, commodity_pb);
var carrier_pb = require('./carrier_pb.js');
goog.object.extend(proto, carrier_pb);
var amount_pb = require('./amount_pb.js');
goog.object.extend(proto, amount_pb);
goog.exportSymbol('proto.user.FetchQuotesRequest', null, global);
goog.exportSymbol('proto.user.ListOfQuoteResponse', null, global);
goog.exportSymbol('proto.user.QuoteRequest', null, global);
goog.exportSymbol('proto.user.QuoteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.QuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.QuoteRequest.repeatedFields_, null);
};
goog.inherits(proto.user.QuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.QuoteRequest.displayName = 'proto.user.QuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.QuoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.QuoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.QuoteResponse.displayName = 'proto.user.QuoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.ListOfQuoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.ListOfQuoteResponse.repeatedFields_, null);
};
goog.inherits(proto.user.ListOfQuoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.ListOfQuoteResponse.displayName = 'proto.user.ListOfQuoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.FetchQuotesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.user.FetchQuotesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.user.FetchQuotesRequest.displayName = 'proto.user.FetchQuotesRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.QuoteRequest.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.QuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.user.QuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.QuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.QuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quoteId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userEmail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    buisnessId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    liablePartyId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    shippingDetail: (f = msg.getShippingDetail()) && shipping_detail_pb.ShippingDetail.toObject(includeInstance, f),
    additionalServicesList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    commoditiesList: jspb.Message.toObjectList(msg.getCommoditiesList(),
    commodity_pb.Commodity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.QuoteRequest}
 */
proto.user.QuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.QuoteRequest;
  return proto.user.QuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.QuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.QuoteRequest}
 */
proto.user.QuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuisnessId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiablePartyId(value);
      break;
    case 6:
      var value = new shipping_detail_pb.ShippingDetail;
      reader.readMessage(value,shipping_detail_pb.ShippingDetail.deserializeBinaryFromReader);
      msg.setShippingDetail(value);
      break;
    case 7:
      var values = /** @type {!Array<!proto.user.AdditionalService>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAdditionalServices(values[i]);
      }
      break;
    case 8:
      var value = new commodity_pb.Commodity;
      reader.readMessage(value,commodity_pb.Commodity.deserializeBinaryFromReader);
      msg.addCommodities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.QuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.QuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.QuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.QuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBuisnessId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLiablePartyId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getShippingDetail();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      shipping_detail_pb.ShippingDetail.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalServicesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      7,
      f
    );
  }
  f = message.getCommoditiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      commodity_pb.Commodity.serializeBinaryToWriter
    );
  }
};


/**
 * optional string quote_id = 1;
 * @return {string}
 */
proto.user.QuoteRequest.prototype.getQuoteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.setQuoteId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_email = 2;
 * @return {string}
 */
proto.user.QuoteRequest.prototype.getUserEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.setUserEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string buisness_id = 3;
 * @return {string}
 */
proto.user.QuoteRequest.prototype.getBuisnessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.setBuisnessId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mode = 4;
 * @return {string}
 */
proto.user.QuoteRequest.prototype.getMode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.setMode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string liable_party_id = 5;
 * @return {string}
 */
proto.user.QuoteRequest.prototype.getLiablePartyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.setLiablePartyId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional ShippingDetail shipping_detail = 6;
 * @return {?proto.user.ShippingDetail}
 */
proto.user.QuoteRequest.prototype.getShippingDetail = function() {
  return /** @type{?proto.user.ShippingDetail} */ (
    jspb.Message.getWrapperField(this, shipping_detail_pb.ShippingDetail, 6));
};


/**
 * @param {?proto.user.ShippingDetail|undefined} value
 * @return {!proto.user.QuoteRequest} returns this
*/
proto.user.QuoteRequest.prototype.setShippingDetail = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.clearShippingDetail = function() {
  return this.setShippingDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.QuoteRequest.prototype.hasShippingDetail = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated AdditionalService additional_services = 7;
 * @return {!Array<!proto.user.AdditionalService>}
 */
proto.user.QuoteRequest.prototype.getAdditionalServicesList = function() {
  return /** @type {!Array<!proto.user.AdditionalService>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<!proto.user.AdditionalService>} value
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.setAdditionalServicesList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!proto.user.AdditionalService} value
 * @param {number=} opt_index
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.addAdditionalServices = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.clearAdditionalServicesList = function() {
  return this.setAdditionalServicesList([]);
};


/**
 * repeated Commodity commodities = 8;
 * @return {!Array<!proto.user.Commodity>}
 */
proto.user.QuoteRequest.prototype.getCommoditiesList = function() {
  return /** @type{!Array<!proto.user.Commodity>} */ (
    jspb.Message.getRepeatedWrapperField(this, commodity_pb.Commodity, 8));
};


/**
 * @param {!Array<!proto.user.Commodity>} value
 * @return {!proto.user.QuoteRequest} returns this
*/
proto.user.QuoteRequest.prototype.setCommoditiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.user.Commodity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.user.Commodity}
 */
proto.user.QuoteRequest.prototype.addCommodities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.user.Commodity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.QuoteRequest} returns this
 */
proto.user.QuoteRequest.prototype.clearCommoditiesList = function() {
  return this.setCommoditiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.QuoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.user.QuoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.QuoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.QuoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quoteid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sk: jspb.Message.getFieldWithDefault(msg, 2, ""),
    carrier: (f = msg.getCarrier()) && carrier_pb.Carrier.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && amount_pb.Amount.toObject(includeInstance, f),
    transitTime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    guranteed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.QuoteResponse}
 */
proto.user.QuoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.QuoteResponse;
  return proto.user.QuoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.QuoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.QuoteResponse}
 */
proto.user.QuoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSk(value);
      break;
    case 3:
      var value = new carrier_pb.Carrier;
      reader.readMessage(value,carrier_pb.Carrier.deserializeBinaryFromReader);
      msg.setCarrier(value);
      break;
    case 4:
      var value = new amount_pb.Amount;
      reader.readMessage(value,amount_pb.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransitTime(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGuranteed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.QuoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.QuoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.QuoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.QuoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSk();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCarrier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      carrier_pb.Carrier.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      amount_pb.Amount.serializeBinaryToWriter
    );
  }
  f = message.getTransitTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGuranteed();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string quoteId = 1;
 * @return {string}
 */
proto.user.QuoteResponse.prototype.getQuoteid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteResponse} returns this
 */
proto.user.QuoteResponse.prototype.setQuoteid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sk = 2;
 * @return {string}
 */
proto.user.QuoteResponse.prototype.getSk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteResponse} returns this
 */
proto.user.QuoteResponse.prototype.setSk = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Carrier carrier = 3;
 * @return {?proto.user.Carrier}
 */
proto.user.QuoteResponse.prototype.getCarrier = function() {
  return /** @type{?proto.user.Carrier} */ (
    jspb.Message.getWrapperField(this, carrier_pb.Carrier, 3));
};


/**
 * @param {?proto.user.Carrier|undefined} value
 * @return {!proto.user.QuoteResponse} returns this
*/
proto.user.QuoteResponse.prototype.setCarrier = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.user.QuoteResponse} returns this
 */
proto.user.QuoteResponse.prototype.clearCarrier = function() {
  return this.setCarrier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.QuoteResponse.prototype.hasCarrier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Amount amount = 4;
 * @return {?proto.user.Amount}
 */
proto.user.QuoteResponse.prototype.getAmount = function() {
  return /** @type{?proto.user.Amount} */ (
    jspb.Message.getWrapperField(this, amount_pb.Amount, 4));
};


/**
 * @param {?proto.user.Amount|undefined} value
 * @return {!proto.user.QuoteResponse} returns this
*/
proto.user.QuoteResponse.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.user.QuoteResponse} returns this
 */
proto.user.QuoteResponse.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.QuoteResponse.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string transit_time = 5;
 * @return {string}
 */
proto.user.QuoteResponse.prototype.getTransitTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.QuoteResponse} returns this
 */
proto.user.QuoteResponse.prototype.setTransitTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool guranteed = 6;
 * @return {boolean}
 */
proto.user.QuoteResponse.prototype.getGuranteed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.user.QuoteResponse} returns this
 */
proto.user.QuoteResponse.prototype.setGuranteed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.ListOfQuoteResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.ListOfQuoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.user.ListOfQuoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.ListOfQuoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.ListOfQuoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quote: (f = msg.getQuote()) && proto.user.QuoteRequest.toObject(includeInstance, f),
    quotesList: jspb.Message.toObjectList(msg.getQuotesList(),
    proto.user.QuoteResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.ListOfQuoteResponse}
 */
proto.user.ListOfQuoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.ListOfQuoteResponse;
  return proto.user.ListOfQuoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.ListOfQuoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.ListOfQuoteResponse}
 */
proto.user.ListOfQuoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.user.QuoteRequest;
      reader.readMessage(value,proto.user.QuoteRequest.deserializeBinaryFromReader);
      msg.setQuote(value);
      break;
    case 2:
      var value = new proto.user.QuoteResponse;
      reader.readMessage(value,proto.user.QuoteResponse.deserializeBinaryFromReader);
      msg.addQuotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.ListOfQuoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.ListOfQuoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.ListOfQuoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.ListOfQuoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.user.QuoteRequest.serializeBinaryToWriter
    );
  }
  f = message.getQuotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.user.QuoteResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional QuoteRequest quote = 1;
 * @return {?proto.user.QuoteRequest}
 */
proto.user.ListOfQuoteResponse.prototype.getQuote = function() {
  return /** @type{?proto.user.QuoteRequest} */ (
    jspb.Message.getWrapperField(this, proto.user.QuoteRequest, 1));
};


/**
 * @param {?proto.user.QuoteRequest|undefined} value
 * @return {!proto.user.ListOfQuoteResponse} returns this
*/
proto.user.ListOfQuoteResponse.prototype.setQuote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.user.ListOfQuoteResponse} returns this
 */
proto.user.ListOfQuoteResponse.prototype.clearQuote = function() {
  return this.setQuote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.user.ListOfQuoteResponse.prototype.hasQuote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated QuoteResponse quotes = 2;
 * @return {!Array<!proto.user.QuoteResponse>}
 */
proto.user.ListOfQuoteResponse.prototype.getQuotesList = function() {
  return /** @type{!Array<!proto.user.QuoteResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.user.QuoteResponse, 2));
};


/**
 * @param {!Array<!proto.user.QuoteResponse>} value
 * @return {!proto.user.ListOfQuoteResponse} returns this
*/
proto.user.ListOfQuoteResponse.prototype.setQuotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.user.QuoteResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.user.QuoteResponse}
 */
proto.user.ListOfQuoteResponse.prototype.addQuotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.user.QuoteResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.user.ListOfQuoteResponse} returns this
 */
proto.user.ListOfQuoteResponse.prototype.clearQuotesList = function() {
  return this.setQuotesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.FetchQuotesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.user.FetchQuotesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.FetchQuotesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.FetchQuotesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    startFrom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endOn: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pk: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.FetchQuotesRequest}
 */
proto.user.FetchQuotesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.FetchQuotesRequest;
  return proto.user.FetchQuotesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.FetchQuotesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.FetchQuotesRequest}
 */
proto.user.FetchQuotesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartFrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndOn(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPk(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.FetchQuotesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.FetchQuotesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.FetchQuotesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.FetchQuotesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartFrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndOn();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPk();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string start_from = 1;
 * @return {string}
 */
proto.user.FetchQuotesRequest.prototype.getStartFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.FetchQuotesRequest} returns this
 */
proto.user.FetchQuotesRequest.prototype.setStartFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end_on = 2;
 * @return {string}
 */
proto.user.FetchQuotesRequest.prototype.getEndOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.FetchQuotesRequest} returns this
 */
proto.user.FetchQuotesRequest.prototype.setEndOn = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pk = 3;
 * @return {string}
 */
proto.user.FetchQuotesRequest.prototype.getPk = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.user.FetchQuotesRequest} returns this
 */
proto.user.FetchQuotesRequest.prototype.setPk = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.user);
